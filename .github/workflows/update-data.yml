name: Video metadata weekly download
on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * 2"  # Once a week on Tuesday at 13:00 UTC

jobs:
  download_new_videos:
    runs-on: ubuntu-latest
    steps:
      - name: Verify then add GitHub SSH key
        # Run this first so temp file does not conflict
        run: |
          [ "$( ssh-keyscan -t rsa github.com | tee github-key-temp | ssh-keygen -lf - 2>/dev/null )" \
          = "2048 SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8 github.com (RSA)" ] \
          || { printf "Invalid GitHub SSH key" >&2; exit 1; }
          mkdir ~/.ssh
          cat github-key-temp >>~/.ssh/known_hosts
          eval "$( ssh-agent -a "$SSH_AUTH_SOCKET" )"
          <<EOF ssh-add -
          ${{ secrets.RUNNER_PRIVATE_KEY }}
          EOF
          rm github-key-temp

      ## Checkout a second branch
      ## TODO: https://github.com/actions/checkout/pull/155
      - name: Fetching the "main" branch to "./"
        uses: actions/checkout@v2  # From the marketplace, by GitHub
        with:
          ref: main  # checkout to data branch

      # We want to be in data branch
      - name: Fetching the "data" branch to "./"
        run: |
          git fetch --depth 1 origin data
          git checkout data
        # end up in 'data'

      - name: Download updates, commit, and push
        env:
          SSH_AUTH_SOCKET: /tmp/ssh_agent.sock
        run: |
          # See: https://github.com/blackjack4494/yt-dlc/issues/288
          sudo -H pip3 install youtube-dl youtube-dlc

          git config user.email "Bot@users.noreply.github.com"
          git config user.name "Continuous Integration Bot"
          status="$( /bin/sh make.sh cron )" || exit "$?"
          [ "${status}" = "up-to-date" ] || exit 0  # Errors if no files downloaded
          # Terminate early if cron did not download new items
          # This also will pushes changes to master if there are new items

          # Push to 'compile' branch
          /bin/sh make.sh publish

          # Signal update to aryailia.github.io
          # TODO: consider just having website run a cron job as well
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.UPDATE_PAT_TOKEN }}" \
          https://api.github.com/repos/Aryailia/aryailia.github.io/dispatches \
          -d '{"event_type":"Update from a-bas-le-ciel-data"}'
